name: Build and Test Binaries

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.22]

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get dependencies
      run: go mod tidy

    - name: Run tests
      run: go test ./... -v

    - name: Build binary
      run: |
        if [ ${{ matrix.os }} == "ubuntu-latest" ] || [ ${{ matrix.os }} == "macos-latest" ]; then
          # Unix-like OS (Linux or macOS)
          GOOS=linux
          if [ ${{ matrix.os }} == "macos-latest" ]; then
            GOOS=darwin
          fi
          GOARCH=amd64
          output="build/${GOOS}_${GOARCH}/gowol"
          if [ $GOOS == "windows" ]; then
            output+=".exe"
          fi
          mkdir -p $(dirname $output)
          GOOS=$GOOS GOARCH=$GOARCH go build -o $output .
        elif [ ${{ matrix.os }} == "windows-latest" ]; then
          # Windows OS
          $env:GOOS="windows"
          $env:GOARCH="amd64"
          $output="build/windows_amd64/gowol.exe"
          mkdir -p (Split-Path -Path $output -Parent)
          go build -o $output .
        else
          echo "Unsupported OS"
          exit 1
        fi

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gowol-binaries-${{ matrix.os }}
        path: build/
