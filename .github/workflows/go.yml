name: Build and Test Binaries

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.22]

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code
      uses: actions/checkout@v4  # Updated to v4

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Get dependencies
      run: go mod tidy

    - name: Run tests
      run: go test ./... -v

    - name: Build binary
      shell: bash
      run: |
        case ${{ matrix.os }} in
          ubuntu-latest)
            GOOS=linux
            ;;
          windows-latest)
            GOOS=windows
            ;;
          macos-latest)
            GOOS=darwin
            ;;
          *)
            echo "Unsupported OS"
            exit 1
            ;;
        esac
        
        GOARCH=amd64
        output="build/${GOOS}_${GOARCH}/gowol"
        if [[ $GOOS == "windows" ]]; then
          output+=".exe"
        fi
        mkdir -p $(dirname $output)
        GOOS=$GOOS GOARCH=$GOARCH go build -o $output .
        
        # Debugging: List the contents of the build directory
        ls -R build/

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: gowol-binaries-${{ matrix.os }}
        path: build/
